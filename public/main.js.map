{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/comments/comments.component.css","webpack:///./src/app/components/comments/comments.component.html","webpack:///./src/app/components/comments/comments.component.ts","webpack:///./src/app/services/comments.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* .homePage {\\r\\n  margin: 0;\\r\\n  font-family: 'Roboto', sans-serif;\\r\\n}\\r\\n\\r\\n#calendarTitle {\\r\\n  font-size: 400px;\\r\\n}\\r\\n\\r\\n#techCalendar {\\r\\n  margin-left: 8%;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.commentsForm {\\r\\n  float: right;\\r\\n  \\r\\n} */\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"homePage\\\">\\r\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor03\\\" aria-controls=\\\"navbarColor03\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n  \\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor03\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Tech Events<span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Events</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">News</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\r\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </nav>\\r\\n\\r\\n\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div id=\\\"header\\\">\\r\\n      <h1>Miami Tech Calendar</h1>\\r\\n    </div>\\r\\n    \\r\\n    <div id=\\\"techCalendar\\\">\\r\\n      <br>\\r\\n      <iframe src=\\\"https://calendar.google.com/calendar/embed?src=techcalendermia%40gmail.com&ctz=America%2FNew_York\\\" style=\\\"border: 0\\\" width=\\\"1320\\\" height=\\\"800\\\" frameborder=\\\"0\\\" scrolling=\\\"no\\\"></iframe>\\r\\n      <br>\\r\\n    </div>\\r\\n\\r\\n    <app-comments></app-comments>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { CommentsComponent } from '../app/components/comments/comments.component'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CommentsService } from './services/comments.service'\r\nimport { AppComponent } from './app.component';\r\nimport { CommentsComponent } from './components/comments/comments.component';\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CommentsComponent },]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CommentsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(routes)\r\n\r\n  ],\r\n  providers: [CommentsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n        <form (ngSubmit)=\\\"addNew()\\\">\\r\\n            <h3>Join the conversation</h3>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-form-label\\\" for=\\\"inputDefault\\\">Name: </label>\\r\\n              <br>\\r\\n              <input [(ngModel)]=\\\"theNewEntry.title\\\" name=\\\"blah\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputDefault\\\">\\r\\n            </div>\\r\\n            \\r\\n            <br>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"exampleTextarea\\\">Comments: </label>\\r\\n              <br>\\r\\n              <textarea  [(ngModel)]=\\\"theNewEntry.content\\\" class=\\\"form-control nameArea\\\" id=\\\"exampleTextarea\\\" name=\\\"blah\\\" cols=\\\"5\\\" rows=\\\"5\\\"></textarea>\\r\\n            </div>\\r\\n            \\r\\n            <button class=\\\"btn btn-outline-secondary\\\">Submit</button>\\r\\n            \\r\\n          </form>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\r\\n  <div *ngFor=\\\"let oneEntry of entries; let i = index\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 \\\" id=\\\"calendarEntry\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n            \\r\\n                <h3>{{oneEntry.title}}</h3>\\r\\n                <p>{{oneEntry.content}}</p>\\r\\n      \\r\\n              <div *ngIf=\\\"oneEntry.owner === loggedInUser.googleID \\\">\\r\\n                <button class=\\\"btn btn-outline-primary btn-sm btn-space\\\" (click)=\\\"showEditForm(i)\\\">Edit</button>\\r\\n                <button class=\\\"btn btn-outline-danger btn-sm\\\" (click)=\\\"deletePost(oneEntry._id)\\\">Delete</button>\\r\\n              <br>\\r\\n              <br>\\r\\n            </div>\\r\\n            </div>\\r\\n      \\r\\n        <form (ngSubmit)=\\\"doTheUpdate(oneEntry._id, myForm)\\\" #myForm=\\\"ngForm\\\" *ngIf=\\\"show === i\\\">\\r\\n          <label for=\\\"title-input\\\"> Updated Name: </label>\\r\\n            <input id=\\\"title-input\\\" type=\\\"text\\\" [(ngModel)]=\\\"oneEntry.title\\\" name=\\\"title\\\">\\r\\n            <br>\\r\\n            <br>\\r\\n          <label for=\\\"content-input\\\"> Updated Comments: </label>\\r\\n          <input id=\\\"content-input\\\" type=\\\"text\\\"  [(ngModel)]=\\\"oneEntry.content\\\" name=\\\"content\\\" >\\r\\n            <br>\\r\\n          <button type=\\\"submit\\\">Save Changes</button>\\r\\n        </form>\\r\\n      \\r\\n        </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n    \\r\\n</div>\\r\\n\\r\\n\\r\\n<br>\\r\\n<br>\\r\\n\\r\\n\\r\\n</div>\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommentsService } from '../../services/comments.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.css']\r\n})\r\n  \r\nexport class CommentsComponent implements OnInit {\r\n  entries: any = [];\r\n\r\n  oneEntry: any = {};\r\n\r\n  theNewEntry: any = {};\r\n\r\n  theEntryToBeDeleted: any = {};\r\n\r\n  loggedInUser: any = {};\r\n  public updatedComment: Object = {};\r\n  public title: String;\r\n  public content: String;\r\n  show: any = false;\r\n  constructor(private theService: CommentsService,\r\n    private myRouter: Router) { }\r\n\r\n\r\n  addNew() {\r\n    this.theService.addNewEntry(this.theNewEntry)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.theNewEntry = {};\r\n        this.getEntries();\r\n      })\r\n      .catch(err => console.log('the err in comments: ', err));\r\n  }\r\n  \r\n\r\n  getEntries() {\r\n    this.theService.getEntries()\r\n      .subscribe((res) => {\r\n        // console.log('entries: ', res)\r\n        this.entries = res.reverse();\r\n      })\r\n  };\r\n\r\n\r\n  // this is comment\r\n  deletePost(oneEntryId) {\r\n    console.log(\"oneEntryId: \", oneEntryId);\r\n    // oneEntry = this.theEntryToBeDeleted\r\n    this.theService.deleteEntry(oneEntryId)\r\n      .subscribe(\r\n        ObjFromApi => {\r\n          this.getEntries();\r\n        }\r\n      )\r\n  };\r\n\r\n  doTheUpdate(oneEntryId, formData) {\r\n    console.log('oneEntryId = = = =  =', oneEntryId);\r\n\r\n    const formInfo = formData.form.controls;\r\n    this.title = formInfo.title.value;\r\n    this.content = formInfo.content.value;\r\n    console.log(\"=============== id: \", this.title, this.content);\r\n  \r\n    this.sendUpdatesToApi(oneEntryId);\r\n  };\r\n\r\n  sendUpdatesToApi(oneEntryId) {\r\n    console.log('this.oneEntry.title:', this.title);\r\n    this.updatedComment = { title: this.title, content: this.content };\r\n    console.log(\"updates:\", this.updatedComment);\r\n    this.theService.updateComment(oneEntryId, this.updatedComment)\r\n      .toPromise()\r\n      .then(() => {\r\n        this.myRouter.navigate(['/'])\r\n\r\n      })\r\n      .catch(err => err.json());\r\n  };\r\n\r\n  showEditForm(index) {\r\n    if (this.show === index) {\r\n      this.show = false\r\n    } else {\r\n      this.show = index;\r\n    }\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.getEntries();\r\n    this.theService.checkIfLoggedIn()\r\n      .toPromise()\r\n      .then(theUser => {\r\n        console.log('who is logged in: ', theUser)\r\n        this.loggedInUser = theUser;\r\n      })\r\n      .catch(err => console.log('Error in check logon in comments: ', err));\r\n  };\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n// import 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\n// import 'rxjs/add/operator/catch';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class CommentsService {\r\n\r\n  constructor(private myHttp: Http) { }\r\n\r\n  getEntries(){\r\n    return this.myHttp.get(`${environment.apiBase}/api/comments`)\r\n    .map((responseThingy)=> responseThingy.json())\r\n  }\r\n\r\n  addNewEntry(theWholeEntryObject){\r\n    return this.myHttp.post(`${environment.apiBase}/api/comments`,theWholeEntryObject, { withCredentials:true })\r\n    .map((res)=>res.json());\r\n  }\r\n\r\n  getOneEntry(theIdOfTheEntry){\r\n    return this.myHttp.get(`${environment.apiBase}/api/comments/${theIdOfTheEntry}`, { withCredentials:true })\r\n    .map((responseThingy)=> responseThingy.json())\r\n  }\r\n\r\n  deleteEntry(theIdOfTheEntry){\r\n    return this.myHttp.post(`${environment.apiBase}/api/comments/${theIdOfTheEntry}/delete`, {}, { withCredentials: true })\r\n    .map((res)=> res.json())\r\n  }\r\n\r\n  updateComment(theIdOfTheEntry, updates) {\r\n    console.log('what: ', updates)\r\n    return this.myHttp.put(`${environment.apiBase}/api/comments/${theIdOfTheEntry}`, updates, { withCredentials: true })\r\n    .map(res => res.json());\r\n  }\r\n\r\n  checkIfLoggedIn() {\r\n    return this.myHttp.get(`${environment.apiBase}/api/loggedin`, { withCredentials: true })\r\n    .map(res => res.json());\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, \n  apiBase: \"http://localhost:3000\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}